name: Deploy to Azure VM

on:
  push:
    branches:
      - dev  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy via SSH
      run: |
        ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'bash -s' << 'EOFMARKER'
          rm -rf ~/crm-2024-dev
          git clone -b dev https://github.com/AIESEC-LK/CRM-2024-NextJS.git ~/crm-2024-dev
          
          cd ~/crm-2024-dev
          
          # Create .env file with all required variables
          cat > .env << EOF
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_NAME=${{ secrets.DB_NAME }}
        CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}
        MONGODB_URI=${{ secrets.CONNECTION_STRING }}
        CLUSTER_IP_ADDRESS=${{ secrets.CLUSTER_IP_ADDRESS }}
        ODOO_API_KEY=${{ secrets.ODOO_API_KEY }}
        MONGO_PUBLIC_API_KEY=${{ secrets.MONGO_PUBLIC_API_KEY }}
        MONGO_PRIVATE_API_KEY=${{ secrets.MONGO_PRIVATE_API_KEY }}
        MONGO_ORG_PUBLIC_KEY=${{ secrets.MONGO_ORG_PUBLIC_KEY }}
        MONGO_ORG_PRIVATE_KEY=${{ secrets.MONGO_ORG_PRIVATE_KEY }}
        CRON_SCHEDULE=${{ secrets.CRON_SCHEDULE }}
        NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
        BASE_URL=${{ secrets.BASE_URL }}
        AZURE_AD_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}
        AZURE_AD_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }}
        AZURE_AD_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}
        EOF
          
          # Debug: Check if .env file was created and show its contents (INCLUDING SECRETS - REMOVE AFTER DEBUGGING)
          echo "DEBUG: Checking if .env file exists"
          if [ -f .env ]; then
            echo "DEBUG: .env file exists"
            echo "DEBUG: .env file size: $(stat -c %s .env) bytes"
            echo "DEBUG: Number of lines in .env: $(wc -l < .env)"
            echo "DEBUG: Showing FULL .env file contents (INCLUDING SECRETS - REMOVE AFTER DEBUGGING):"
            cat .env
            echo "DEBUG: Checking for MONGODB_URI specifically:"
            grep "MONGODB_URI" .env || echo "MONGODB_URI is missing"
          else
            echo "DEBUG: .env file does NOT exist!"
          fi
          
          # Create a copy of .env as .env.local for Next.js
          cp .env .env.local
          echo "DEBUG: Created .env.local file as well"
          
          # Stop and remove old containers/images
          sudo docker stop crm-2024-dev || true
          sudo docker rm crm-2024-dev || true
          sudo docker rmi crm-2024-dev-image || true
          
          # Debug: Show Docker build command
          echo "DEBUG: Starting Docker build with command: sudo docker build -t crm-2024-dev-image ."
          
          # Build new Docker image
          sudo docker build -t crm-2024-dev-image .
          
          # Debug: Check if Docker image was created
          echo "DEBUG: Checking if Docker image was created"
          sudo docker images | grep crm-2024-dev-image
          
          # Debug: Show Docker run command
          echo "DEBUG: Starting Docker container with command: sudo docker run -d -p 3000:3004 --name crm-2024-dev --env-file .env crm-2024-dev-image"
          
          # Run container with env file
          sudo docker run -d -p 3004:3000 --name crm-2024-dev --env-file .env crm-2024-dev-image
          
          # Debug: Check if container is running
          echo "DEBUG: Checking if container is running"
          sudo docker ps | grep crm-2024-dev
          
          # Debug: Show container logs if it exists
          echo "DEBUG: Container logs (if any):"
          sudo docker logs crm-2024-dev || echo "No logs available yet"
        EOFMARKER
